// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/sensor.proto

package pt.sharespot.iot.core.sensor.buf;

/**
 * Protobuf type {@code pt.sharespot.iot.core.AirPressure}
 */
public final class AirPressure extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pt.sharespot.iot.core.AirPressure)
    AirPressureOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AirPressure.newBuilder() to construct.
  private AirPressure(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AirPressure() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AirPressure();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AirPressure(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.FloatValue.Builder subBuilder = null;
            if (hectoPascal_ != null) {
              subBuilder = hectoPascal_.toBuilder();
            }
            hectoPascal_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(hectoPascal_);
              hectoPascal_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pt.sharespot.iot.core.sensor.buf.Sensor.internal_static_pt_sharespot_iot_core_AirPressure_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pt.sharespot.iot.core.sensor.buf.Sensor.internal_static_pt_sharespot_iot_core_AirPressure_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            pt.sharespot.iot.core.sensor.buf.AirPressure.class, pt.sharespot.iot.core.sensor.buf.AirPressure.Builder.class);
  }

  public static final int HECTO_PASCAL_FIELD_NUMBER = 1;
  private com.google.protobuf.FloatValue hectoPascal_;
  /**
   * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
   * @return Whether the hectoPascal field is set.
   */
  @java.lang.Override
  public boolean hasHectoPascal() {
    return hectoPascal_ != null;
  }
  /**
   * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
   * @return The hectoPascal.
   */
  @java.lang.Override
  public com.google.protobuf.FloatValue getHectoPascal() {
    return hectoPascal_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : hectoPascal_;
  }
  /**
   * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.FloatValueOrBuilder getHectoPascalOrBuilder() {
    return getHectoPascal();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hectoPascal_ != null) {
      output.writeMessage(1, getHectoPascal());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hectoPascal_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getHectoPascal());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof pt.sharespot.iot.core.sensor.buf.AirPressure)) {
      return super.equals(obj);
    }
    pt.sharespot.iot.core.sensor.buf.AirPressure other = (pt.sharespot.iot.core.sensor.buf.AirPressure) obj;

    if (hasHectoPascal() != other.hasHectoPascal()) return false;
    if (hasHectoPascal()) {
      if (!getHectoPascal()
          .equals(other.getHectoPascal())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasHectoPascal()) {
      hash = (37 * hash) + HECTO_PASCAL_FIELD_NUMBER;
      hash = (53 * hash) + getHectoPascal().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static pt.sharespot.iot.core.sensor.buf.AirPressure parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(pt.sharespot.iot.core.sensor.buf.AirPressure prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pt.sharespot.iot.core.AirPressure}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pt.sharespot.iot.core.AirPressure)
      pt.sharespot.iot.core.sensor.buf.AirPressureOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pt.sharespot.iot.core.sensor.buf.Sensor.internal_static_pt_sharespot_iot_core_AirPressure_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pt.sharespot.iot.core.sensor.buf.Sensor.internal_static_pt_sharespot_iot_core_AirPressure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pt.sharespot.iot.core.sensor.buf.AirPressure.class, pt.sharespot.iot.core.sensor.buf.AirPressure.Builder.class);
    }

    // Construct using pt.sharespot.iot.core.sensor.buf.AirPressure.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (hectoPascalBuilder_ == null) {
        hectoPascal_ = null;
      } else {
        hectoPascal_ = null;
        hectoPascalBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pt.sharespot.iot.core.sensor.buf.Sensor.internal_static_pt_sharespot_iot_core_AirPressure_descriptor;
    }

    @java.lang.Override
    public pt.sharespot.iot.core.sensor.buf.AirPressure getDefaultInstanceForType() {
      return pt.sharespot.iot.core.sensor.buf.AirPressure.getDefaultInstance();
    }

    @java.lang.Override
    public pt.sharespot.iot.core.sensor.buf.AirPressure build() {
      pt.sharespot.iot.core.sensor.buf.AirPressure result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public pt.sharespot.iot.core.sensor.buf.AirPressure buildPartial() {
      pt.sharespot.iot.core.sensor.buf.AirPressure result = new pt.sharespot.iot.core.sensor.buf.AirPressure(this);
      if (hectoPascalBuilder_ == null) {
        result.hectoPascal_ = hectoPascal_;
      } else {
        result.hectoPascal_ = hectoPascalBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof pt.sharespot.iot.core.sensor.buf.AirPressure) {
        return mergeFrom((pt.sharespot.iot.core.sensor.buf.AirPressure)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(pt.sharespot.iot.core.sensor.buf.AirPressure other) {
      if (other == pt.sharespot.iot.core.sensor.buf.AirPressure.getDefaultInstance()) return this;
      if (other.hasHectoPascal()) {
        mergeHectoPascal(other.getHectoPascal());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      pt.sharespot.iot.core.sensor.buf.AirPressure parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (pt.sharespot.iot.core.sensor.buf.AirPressure) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.FloatValue hectoPascal_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> hectoPascalBuilder_;
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     * @return Whether the hectoPascal field is set.
     */
    public boolean hasHectoPascal() {
      return hectoPascalBuilder_ != null || hectoPascal_ != null;
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     * @return The hectoPascal.
     */
    public com.google.protobuf.FloatValue getHectoPascal() {
      if (hectoPascalBuilder_ == null) {
        return hectoPascal_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : hectoPascal_;
      } else {
        return hectoPascalBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public Builder setHectoPascal(com.google.protobuf.FloatValue value) {
      if (hectoPascalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hectoPascal_ = value;
        onChanged();
      } else {
        hectoPascalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public Builder setHectoPascal(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (hectoPascalBuilder_ == null) {
        hectoPascal_ = builderForValue.build();
        onChanged();
      } else {
        hectoPascalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public Builder mergeHectoPascal(com.google.protobuf.FloatValue value) {
      if (hectoPascalBuilder_ == null) {
        if (hectoPascal_ != null) {
          hectoPascal_ =
            com.google.protobuf.FloatValue.newBuilder(hectoPascal_).mergeFrom(value).buildPartial();
        } else {
          hectoPascal_ = value;
        }
        onChanged();
      } else {
        hectoPascalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public Builder clearHectoPascal() {
      if (hectoPascalBuilder_ == null) {
        hectoPascal_ = null;
        onChanged();
      } else {
        hectoPascal_ = null;
        hectoPascalBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public com.google.protobuf.FloatValue.Builder getHectoPascalBuilder() {
      
      onChanged();
      return getHectoPascalFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getHectoPascalOrBuilder() {
      if (hectoPascalBuilder_ != null) {
        return hectoPascalBuilder_.getMessageOrBuilder();
      } else {
        return hectoPascal_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : hectoPascal_;
      }
    }
    /**
     * <code>.google.protobuf.FloatValue hecto_pascal = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getHectoPascalFieldBuilder() {
      if (hectoPascalBuilder_ == null) {
        hectoPascalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getHectoPascal(),
                getParentForChildren(),
                isClean());
        hectoPascal_ = null;
      }
      return hectoPascalBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:pt.sharespot.iot.core.AirPressure)
  }

  // @@protoc_insertion_point(class_scope:pt.sharespot.iot.core.AirPressure)
  private static final pt.sharespot.iot.core.sensor.buf.AirPressure DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new pt.sharespot.iot.core.sensor.buf.AirPressure();
  }

  public static pt.sharespot.iot.core.sensor.buf.AirPressure getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AirPressure>
      PARSER = new com.google.protobuf.AbstractParser<AirPressure>() {
    @java.lang.Override
    public AirPressure parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AirPressure(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AirPressure> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AirPressure> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public pt.sharespot.iot.core.sensor.buf.AirPressure getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

