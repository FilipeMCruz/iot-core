// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/sensor.proto

package pt.sharespot.iot.core.data.buf;

/**
 * Protobuf enum {@code pt.sharespot.iot.core.CO2DataOptionsBuf}
 */
public enum CO2DataOptionsBuf
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNIDENTIFIED_CO2_DATA = 0;</code>
   */
  UNIDENTIFIED_CO2_DATA(0),
  /**
   * <code>WITH_CO2_DATA = 1;</code>
   */
  WITH_CO2_DATA(1),
  /**
   * <code>WITHOUT_CO2_DATA = 2;</code>
   */
  WITHOUT_CO2_DATA(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNIDENTIFIED_CO2_DATA = 0;</code>
   */
  public static final int UNIDENTIFIED_CO2_DATA_VALUE = 0;
  /**
   * <code>WITH_CO2_DATA = 1;</code>
   */
  public static final int WITH_CO2_DATA_VALUE = 1;
  /**
   * <code>WITHOUT_CO2_DATA = 2;</code>
   */
  public static final int WITHOUT_CO2_DATA_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CO2DataOptionsBuf valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CO2DataOptionsBuf forNumber(int value) {
    switch (value) {
      case 0: return UNIDENTIFIED_CO2_DATA;
      case 1: return WITH_CO2_DATA;
      case 2: return WITHOUT_CO2_DATA;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CO2DataOptionsBuf>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CO2DataOptionsBuf> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CO2DataOptionsBuf>() {
          public CO2DataOptionsBuf findValueByNumber(int number) {
            return CO2DataOptionsBuf.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return pt.sharespot.iot.core.data.buf.Sensor.getDescriptor().getEnumTypes().get(3);
  }

  private static final CO2DataOptionsBuf[] VALUES = values();

  public static CO2DataOptionsBuf valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CO2DataOptionsBuf(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:pt.sharespot.iot.core.CO2DataOptionsBuf)
}

